version: '3.8'

services:
  mysql:
    image: eventuateio/eventuate-mysql:0.14.0.RELEASE
    container_name: mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=admin
      - USE_DB_ID=true
    volumes:
      - mysql-data:/var/lib/mysql                   # persistência do data‐dir
      - ./mysql-init:/docker-entrypoint-initdb.d    # seus scripts SQL de bootstrap
    ports:
      - "3306:3306"
    networks:
      - backend
    healthcheck:
      test: ["CMD","mysqladmin","ping","-h","localhost","-uroot","-padmin"]
      interval: 10s
      timeout: 5s
      retries: 5


  zookeeper:
    image: zookeeper:3.7
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_CLIENT_PORT: 2181
      ZOO_TICK_TIME: 2000
    networks:
      - backend

  kafka:
    image: bitnami/kafka:3.3
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_KRAFT_CLUSTER_ID=Qk1vR0h5Rm5OTmdqN3QwNg==
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - backend

  user-service:
    build: ./user-service
    container_name: user-service
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8085:8085"
    networks:
      - backend

  book-service:
    build: ./book-service
    container_name: book-service
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8081:8081"
    networks:
      - backend

  cart-service:
    build: ./cart-service
    container_name: cart-service
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8082:8082"
    networks:
      - backend

  order-service:
    build: ./order-service
    container_name: order-service
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8083:8083"
    networks:
      - backend

  shipping-service:
    build: ./shipping-service
    container_name: shipping-service
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8084:8084"
    networks:
      - backend

  order-query-service:
    build: ./orderquery-service
    container_name: orderquery-service
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
      order-service:
        condition: service_started
      shipping-service:
        condition: service_started
    ports:
      - "8086:8086"
    networks:
      - backend

  gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    depends_on:
      - user-service
      - book-service
      - cart-service
      - order-service
      - shipping-service
      - order-query-service
    ports:
      - "8080:8080"
    networks:
      - backend

  cdcservice:
    build:
      context: .
      dockerfile: Dockerfile.cdc
    container_name: eventuate-tram-cdc-service
    ports:
      - "8099:8080"
    depends_on:
      - mysql
      - kafka
      - zookeeper
    networks:
      - backend
    environment:
      # apenas polling + tram (single‐pipeline)
      - SPRING_PROFILES_ACTIVE=EventuatePolling,EventuateTram

      # DataSource para o schema eventuate
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/eventuate?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=cdc
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver

      # legacy single‐pipeline properties:
      - EVENTUATELOCAL_CDC_READER_NAME=PollingReader
      - EVENTUATELOCAL_CDC_OFFSET_STORE_KEY=PollingReaderOffset
      - EVENTUATELOCAL_CDC_POLLING_INTERVAL_IN_MILLISECONDS=500
      - EVENTUATELOCAL_CDC_MAX_EVENTS_PER_POLLING=100
      - eventuate.cdc.type=EventuateTram
      - EVENTUATE_OUTBOX_ID=1

      # Kafka/ZK para publicação:
      - EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING=zookeeper:2181

      - LOGGING_LEVEL_ROOT=DEBUG

volumes:
  mysql-data:
  kafka_data:

networks:
  backend:
